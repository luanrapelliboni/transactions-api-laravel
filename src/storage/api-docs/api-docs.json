{
    "openapi": "3.0.0",
    "info": {
        "title": "Transactions API Documentation",
        "description": "Transactions API",
        "contact": {
            "email": "luanrapelliboni@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8088/api",
            "description": "Transactions API Server"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All users"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReqyest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error store user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating user."
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by id",
                "description": "Returns user specified",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User detail"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No user with ID 1"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user by id",
                "description": "Update user specified",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReqyest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No user with ID 1"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error update user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating user."
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by id",
                "description": "Delete user specified",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No user with ID 1"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error delete user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting user."
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transfer": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Transfer value between wallets",
                "description": "Transfer value between wallets",
                "operationId": "transferBetwenWallet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WalletTransferRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wallet updated successfull"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "results": {
                                            "type": "object",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error store user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating wallet."
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No payer with ID 1 | No payee with ID 1"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessible entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wallet not found | insuficient funds | payer cannot be a seller"
                                        },
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserReqyest": {
                "title": "UserRequest schema",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "document": {
                        "type": "string",
                        "example": "11122233344"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "1234"
                    },
                    "type": {
                        "type": "string",
                        "example": "CONSUMER or SELLER"
                    },
                    "balance": {
                        "type": "string",
                        "example": "10.0"
                    }
                },
                "type": "object"
            },
            "WalletTransferRequest": {
                "title": "WalletTransferRequest schema",
                "properties": {
                    "payer": {
                        "type": "integer",
                        "example": "1"
                    },
                    "payee": {
                        "type": "integer",
                        "example": "2"
                    },
                    "value": {
                        "type": "string",
                        "example": "45.90"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User schema",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "document": {
                        "type": "string",
                        "example": "11122233344"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "$2y$10$vIHysOTa403cI29EipFMe.090X.eaascDyyXIx72srPGtggpr97cy"
                    },
                    "type": {
                        "type": "string"
                    },
                    "wallet": {
                        "$ref": "#/components/schemas/Wallet"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-09-22T23:00:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-09-22T23:00:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Wallet": {
                "title": "Wallet schema",
                "properties": {
                    "balance": {
                        "type": "string",
                        "example": "90.00"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-09-22T23:00:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-09-22T23:00:41.000000Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Transactions",
            "description": "API Endpoints of Transactions"
        }
    ]
}